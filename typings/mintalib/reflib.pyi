"""
This type stub file was generated by pyright.
"""

"""
    Alternate implementation of indicators for reference/testing purposes
    Calculations are pandas/numpy based
"""
def calc_roc(series, period: int = ...):
    """Rate of Change"""
    ...

def calc_ema(series, period: int, adjust: bool = ...):
    """Exponential Moving Average"""
    ...

def calc_sma(series, period: int):
    """Simple Moving Average"""
    ...

def calc_sum(series, period: int):
    """Rolling Sum"""
    ...

def calc_min(series, period: int):
    """Rolling Minimum"""
    ...

def calc_max(series, period: int):
    """Rolling Maximum"""
    ...

def calc_stdev(series, period: int):
    """Standard Deviation"""
    ...

def calc_mad(series, period: int):
    """Mean Aasolute deviation"""
    ...

def calc_wma(series, period: int = ...):
    """Weighted Moving Average"""
    ...

def calc_rsi(series, period: int = ...):
    """Relative Strength Index"""
    ...

def calc_macd(series, n1: int = ..., n2: int = ..., n3: int = ...): # -> DataFrame:
    """Moving Averrage Convergence Divergence"""
    ...

def calc_ppo(series, n1: int = ..., n2: int = ..., n3: int = ...): # -> DataFrame:
    """Price percentage oscillator"""
    ...

def calc_slope(series, period: int = ...):
    """Slope (time linear regression)"""
    ...

